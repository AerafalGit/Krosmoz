// <auto-generated />
using Krosmoz.Servers.GameServer.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Krosmoz.Servers.GameServer.Database.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Krosmoz.Servers.GameServer.Database.Models.Maps.MapRecord", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<short[]>("BlueCells")
                        .IsRequired()
                        .HasColumnType("smallint[]");

                    b.Property<short?>("BottomCellId")
                        .HasColumnType("smallint");

                    b.Property<int>("BottomNeighborId")
                        .HasColumnType("integer");

                    b.Property<int>("Capabilities")
                        .HasColumnType("integer");

                    b.Property<long[]>("Cells")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<bool>("HasPriorityOnWorldMap")
                        .HasColumnType("boolean");

                    b.Property<short?>("LeftCellId")
                        .HasColumnType("smallint");

                    b.Property<int>("LeftNeighborId")
                        .HasColumnType("integer");

                    b.Property<int>("MerchantsMax")
                        .HasColumnType("integer");

                    b.Property<bool>("Outdoor")
                        .HasColumnType("boolean");

                    b.Property<bool>("PlacementGenDisabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("PrismAllowed")
                        .HasColumnType("boolean");

                    b.Property<bool>("PvpDisabled")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<short[]>("RedCells")
                        .IsRequired()
                        .HasColumnType("smallint[]");

                    b.Property<short?>("RightCellId")
                        .HasColumnType("smallint");

                    b.Property<int>("RightNeighborId")
                        .HasColumnType("integer");

                    b.Property<bool>("SpawnDisabled")
                        .HasColumnType("boolean");

                    b.Property<int>("SubAreaId")
                        .HasColumnType("integer");

                    b.Property<short?>("TopCellId")
                        .HasColumnType("smallint");

                    b.Property<int>("TopNeighborId")
                        .HasColumnType("integer");

                    b.Property<int>("WorldMap")
                        .HasColumnType("integer");

                    b.Property<int>("X")
                        .HasColumnType("integer");

                    b.Property<int>("Y")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("maps", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
