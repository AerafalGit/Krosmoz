// Copyright (c) Krosmoz 2025.
// Krosmoz licenses this file to you under the MIT license.
// See the license here https://github.com/AerafalGit/Krosmoz/blob/main/LICENSE.

namespace Krosmoz.SourceGenerators.Initialization.Generated;

/// <summary>
/// Provides constants and source code for the <c>IAsyncInitializableService</c> interface,
/// which defines a contract for services that require asynchronous initialization.
/// </summary>
public static class IAsyncInitializableService
{
    /// <summary>
    /// The global name of the generated file for the <c>IAsyncInitializableService</c> interface.
    /// </summary>
    public const string GlobalName = $"{nameof(IAsyncInitializableService)}.g.cs";

    /// <summary>
    /// The source code for the <c>IAsyncInitializableService</c> interface, which includes
    /// an asynchronous initialization method.
    /// </summary>
    public const string Source =
        """
        // <auto-generated/>

        namespace Krosmoz.Core.Services;

        [global::System.CodeDom.Compiler.GeneratedCode("Krosmoz.SourceGenerators.Initialization", "1.0.0")]
        internal interface IAsyncInitializableService
        {
            global::System.Threading.Tasks.Task InitializeAsync(global::System.Threading.CancellationToken cancellationToken);
        }
        """;
}
